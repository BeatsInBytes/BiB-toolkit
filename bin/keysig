#!/bin/bash

# The usage message when errors are made
usageMessage="ERROR: usage: keysig [-ains] <inputfile>"

# Define the keysig function
keySigFinder() {
   # $file $help $helpFull $interpretations $average
   dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
   if [ $2 == 'true' ] || [ $3 == 'true' ]; then
      cat $dir/man/keysig
   else
      if [ -f $1 ]; then

         lineNum=$(cat $1 | grep 'k\[' | wc -l)

         trackNum=$(cat $1 | grep 'k\[' | tr '\t' '\n' | wc -l)
         echo $trackNum
         
         for i in $(seq 1 $lineNum); do
            cat $1 | grep 'k\[' | sed "${i}q;d" | tr '\t' '\n' | grep .
            printf "\n"
         done
         echo $5
      else
         echo "keysig: ERROR: File '$1' does not exist"
         echo "$usageMessage"
      fi
   fi
}


#lists all inputs
allArgList=$(echo "$@" | tr ' ' '\n' )
 
# Read the input file(s)
file=$(echo "$allArgList" | sed '/^-/ d')

# Check number of files
numFile=$(echo "$file" | grep . | wc -l | tr -d ' ')

argNum=$(echo "$allArgList" | grep . | wc -l)

argListFirst=$(for i; do echo $i | grep ^- ; done)

unrecogList=$(echo "$argListFirst" | grep -v -- '^-s$' | grep -v -- '^-a$' | grep -v -- '^-h$' | grep -v -- '^-i$' | grep -v -- '^--interpretations$' | grep -v -- '^--average$' | grep -v -- '^--scale-degree$' | grep -v -- '^--help$' | grep .)
# 


unrecogNum=$(echo "$unrecogList" | grep .  | wc -l | tr -d ' ' )

if [ $unrecogNum -gt 0 ]; then
   echo "$usageMessage"
   sleep .2
   echo "
The following are not recoginzed options for the keysig program:"
   for i in $(seq 1 $unrecogNum); do
      printf "\t"
      echo "$unrecogList" | sed "${i}q;d"
   done
else

   if [ $argNum -eq 0 ]; then
      echo "$usageMessage"
   else
      # File number handling
      if [ $numFile -eq '0' ]; then
         argList=$(for i; do echo $i | grep ^- ; done)

         help=$(echo $argList | tr ' ' '\n' | grep -- '^-h$')
         if [ -z $help ]; then 
            help=false
         else
            help=true
         fi

         helpFull=$(echo $argList | tr ' ' '\n' | grep -- '^--help$')
         if [ -z $helpFull ]; then 
            helpFull=false
         else
            helpFull=true
         fi

         if [ $help == 'true' ] || [ $helpFull == 'true' ]; then
            dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
            cat $dir/man/keysig
         else
               echo "   
         keysig: ERROR: No input file specified
         "
         fi

      elif [ $numFile -gt '1' ]; then
         echo "
         keysig: ERROR: $numFile input files; only 1 supported
         "
      else
         argList=$(for i; do echo $i | grep ^- ; done)
         help=$(echo $argList | tr ' ' '\n' | grep -- '^-h$')
         if [ -z $help ]; then 
            help=false
         else
            help=true
         fi

         helpFull=$(echo $argList | tr ' ' '\n' | grep -- '^--help$')
         if [ -z $helpFull ]; then 
            helpFull=false
         else
            helpFull=true
         fi

         interpretations=$(echo $argList | tr ' ' '\n' | grep -- '^-i$')
         interpretationsFull=$(echo $argList | tr ' ' '\n' | grep -- '^--interpretations$')

         if [[ ! -z $interpretations ]] || [[ ! -z $interpretationsFull ]] ; then 
            interpretations=true
         else
            interpretations=false
         fi

         average=$(echo $argList | tr ' ' '\n' | grep -- '^-a$')
         averageFull=$(echo $argList | tr ' ' '\n' | grep -- '^--average$')

         if [[ ! -z $average ]] || [[ ! -z $averageFull ]]; then 
            average=true
         else
            average=false
         fi

         keySigFinder $file $help $helpFull $interpretations $average
      fi
   fi
fi